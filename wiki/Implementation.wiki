#summary How to use jSCEP in your own application
#labels Phase-Implementation,Featured

= Introduction =

This page discusses how to use jSCEP in your own application.  For full usage information, you are recommended to download and read the [http://code.google.com/p/jscep/downloads/list?q=label:Featured%20type=Docs current javadoc package].

= Details =

== Simple ==

{{{
X500Principal subject = new X500Principal("CN=jscep.googlecode.com,O=Google Inc,L=Mountain View,ST=California,C=US");
URL url = new URL("http://www.example.org/scep/");
Proxy proxy = new Proxy(Proxy.Type.HTTP, new InetSocketAddress("proxy.example.org", 80));

Requester client = new Requester.Builder(url)
                                .proxy(proxy)
                                .subject(subject)
                                .build();
List<X509Certificate> certs = client.enroll("password".toCharArray()).getCertificates(); // Retrieve the signed certificate
KeyPair pair = client.getKeyPair();     // Retrieve the generated key pair
}}}

== Renewing an Existing Certificate ==

If the CA supports renewal, we can renew an existing certificate.

{{{
X509Certificate identity = ...;
KeyPair keyPair = ...;
URL url = new URL("http://www.example.org/scep/");

Requester client = new Requester.Builder(url)
                                .identity(identity)
                                .keyPair(keyPair)
                                .build();
List<X509Certificate> certs = client.enroll("password".toCharArray()).getCertificates();  // Retrieve the renewed certificate

== Pending Response ==

{{{
X509Certificate identity = ...;
KeyPair keyPair = ...;
URL url = new URL("http://www.example.org/scep/");

Requester client = new Requester.Builder(url)
                                .identity(identity)
                                .keyPair(keyPair)
                                .build();
EnrollmentResponse response = client.enroll("password".toCharArray());
ScheduledExecutorService exec = new ScheduledThreadPoolExecutor(1);
if (response.isPending()) {
    Future<EnrollmentResponse> future = exec.schedule(response.getTask(), 2L, TimeUnit.HOURS);
}
}}}